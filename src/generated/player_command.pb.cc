// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player_command.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "player_command.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* RequestIdentifier_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestIdentifier_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerCommandMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerCommandMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerCommandMsg_NewSongRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerCommandMsg_NewSongRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerCommandReplyMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerCommandReplyMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_player_5fcommand_2eproto() {
  protobuf_AddDesc_player_5fcommand_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "player_command.proto");
  GOOGLE_CHECK(file != NULL);
  RequestIdentifier_descriptor_ = file->message_type(0);
  static const int RequestIdentifier_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestIdentifier, cookie_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestIdentifier, requestor_guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestIdentifier, requestor_name_),
  };
  RequestIdentifier_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestIdentifier_descriptor_,
      RequestIdentifier::default_instance_,
      RequestIdentifier_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestIdentifier, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestIdentifier, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestIdentifier));
  PlayerCommandMsg_descriptor_ = file->message_type(1);
  static const int PlayerCommandMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCommandMsg, req_identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCommandMsg, stop_play_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCommandMsg, new_song_request_),
  };
  PlayerCommandMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PlayerCommandMsg_descriptor_,
      PlayerCommandMsg::default_instance_,
      PlayerCommandMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCommandMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCommandMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PlayerCommandMsg));
  PlayerCommandMsg_NewSongRequest_descriptor_ = PlayerCommandMsg_descriptor_->nested_type(0);
  static const int PlayerCommandMsg_NewSongRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCommandMsg_NewSongRequest, song_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCommandMsg_NewSongRequest, position_in_ms_),
  };
  PlayerCommandMsg_NewSongRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PlayerCommandMsg_NewSongRequest_descriptor_,
      PlayerCommandMsg_NewSongRequest::default_instance_,
      PlayerCommandMsg_NewSongRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCommandMsg_NewSongRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCommandMsg_NewSongRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PlayerCommandMsg_NewSongRequest));
  PlayerCommandReplyMsg_descriptor_ = file->message_type(2);
  static const int PlayerCommandReplyMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCommandReplyMsg, req_identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCommandReplyMsg, req_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCommandReplyMsg, req_status_desc_),
  };
  PlayerCommandReplyMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PlayerCommandReplyMsg_descriptor_,
      PlayerCommandReplyMsg::default_instance_,
      PlayerCommandReplyMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCommandReplyMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCommandReplyMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PlayerCommandReplyMsg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_player_5fcommand_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestIdentifier_descriptor_, &RequestIdentifier::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PlayerCommandMsg_descriptor_, &PlayerCommandMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PlayerCommandMsg_NewSongRequest_descriptor_, &PlayerCommandMsg_NewSongRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PlayerCommandReplyMsg_descriptor_, &PlayerCommandReplyMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_player_5fcommand_2eproto() {
  delete RequestIdentifier::default_instance_;
  delete RequestIdentifier_reflection_;
  delete PlayerCommandMsg::default_instance_;
  delete PlayerCommandMsg_reflection_;
  delete PlayerCommandMsg_NewSongRequest::default_instance_;
  delete PlayerCommandMsg_NewSongRequest_reflection_;
  delete PlayerCommandReplyMsg::default_instance_;
  delete PlayerCommandReplyMsg_reflection_;
}

void protobuf_AddDesc_player_5fcommand_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024player_command.proto\"S\n\021RequestIdentif"
    "ier\022\016\n\006cookie\030\001 \002(\004\022\026\n\016requestor_guid\030\002 "
    "\002(\004\022\026\n\016requestor_name\030\003 \002(\t\"\315\001\n\020PlayerCo"
    "mmandMsg\022*\n\016req_identifier\030\001 \002(\0132\022.Reque"
    "stIdentifier\022\021\n\tstop_play\030\002 \001(\010\022:\n\020new_s"
    "ong_request\030\003 \001(\0132 .PlayerCommandMsg.New"
    "SongRequest\032>\n\016NewSongRequest\022\021\n\tsong_na"
    "me\030\001 \002(\t\022\031\n\016position_in_ms\030\002 \001(\r:\0010\"p\n\025P"
    "layerCommandReplyMsg\022*\n\016req_identifier\030\001"
    " \002(\0132\022.RequestIdentifier\022\022\n\nreq_status\030\002"
    " \002(\010\022\027\n\017req_status_desc\030\003 \002(\t", 429);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "player_command.proto", &protobuf_RegisterTypes);
  RequestIdentifier::default_instance_ = new RequestIdentifier();
  PlayerCommandMsg::default_instance_ = new PlayerCommandMsg();
  PlayerCommandMsg_NewSongRequest::default_instance_ = new PlayerCommandMsg_NewSongRequest();
  PlayerCommandReplyMsg::default_instance_ = new PlayerCommandReplyMsg();
  RequestIdentifier::default_instance_->InitAsDefaultInstance();
  PlayerCommandMsg::default_instance_->InitAsDefaultInstance();
  PlayerCommandMsg_NewSongRequest::default_instance_->InitAsDefaultInstance();
  PlayerCommandReplyMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_player_5fcommand_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_player_5fcommand_2eproto {
  StaticDescriptorInitializer_player_5fcommand_2eproto() {
    protobuf_AddDesc_player_5fcommand_2eproto();
  }
} static_descriptor_initializer_player_5fcommand_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int RequestIdentifier::kCookieFieldNumber;
const int RequestIdentifier::kRequestorGuidFieldNumber;
const int RequestIdentifier::kRequestorNameFieldNumber;
#endif  // !_MSC_VER

RequestIdentifier::RequestIdentifier()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RequestIdentifier)
}

void RequestIdentifier::InitAsDefaultInstance() {
}

RequestIdentifier::RequestIdentifier(const RequestIdentifier& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RequestIdentifier)
}

void RequestIdentifier::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cookie_ = GOOGLE_ULONGLONG(0);
  requestor_guid_ = GOOGLE_ULONGLONG(0);
  requestor_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestIdentifier::~RequestIdentifier() {
  // @@protoc_insertion_point(destructor:RequestIdentifier)
  SharedDtor();
}

void RequestIdentifier::SharedDtor() {
  if (requestor_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete requestor_name_;
  }
  if (this != default_instance_) {
  }
}

void RequestIdentifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestIdentifier::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestIdentifier_descriptor_;
}

const RequestIdentifier& RequestIdentifier::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_player_5fcommand_2eproto();
  return *default_instance_;
}

RequestIdentifier* RequestIdentifier::default_instance_ = NULL;

RequestIdentifier* RequestIdentifier::New() const {
  return new RequestIdentifier;
}

void RequestIdentifier::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RequestIdentifier*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(cookie_, requestor_guid_);
    if (has_requestor_name()) {
      if (requestor_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        requestor_name_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestIdentifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RequestIdentifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 cookie = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cookie_)));
          set_has_cookie();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_requestor_guid;
        break;
      }

      // required uint64 requestor_guid = 2;
      case 2: {
        if (tag == 16) {
         parse_requestor_guid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestor_guid_)));
          set_has_requestor_guid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_requestor_name;
        break;
      }

      // required string requestor_name = 3;
      case 3: {
        if (tag == 26) {
         parse_requestor_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requestor_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->requestor_name().data(), this->requestor_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "requestor_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RequestIdentifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RequestIdentifier)
  return false;
#undef DO_
}

void RequestIdentifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RequestIdentifier)
  // required uint64 cookie = 1;
  if (has_cookie()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->cookie(), output);
  }

  // required uint64 requestor_guid = 2;
  if (has_requestor_guid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->requestor_guid(), output);
  }

  // required string requestor_name = 3;
  if (has_requestor_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requestor_name().data(), this->requestor_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "requestor_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->requestor_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RequestIdentifier)
}

::google::protobuf::uint8* RequestIdentifier::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RequestIdentifier)
  // required uint64 cookie = 1;
  if (has_cookie()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->cookie(), target);
  }

  // required uint64 requestor_guid = 2;
  if (has_requestor_guid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->requestor_guid(), target);
  }

  // required string requestor_name = 3;
  if (has_requestor_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requestor_name().data(), this->requestor_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "requestor_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->requestor_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RequestIdentifier)
  return target;
}

int RequestIdentifier::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 cookie = 1;
    if (has_cookie()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cookie());
    }

    // required uint64 requestor_guid = 2;
    if (has_requestor_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->requestor_guid());
    }

    // required string requestor_name = 3;
    if (has_requestor_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->requestor_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestIdentifier::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestIdentifier* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestIdentifier*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestIdentifier::MergeFrom(const RequestIdentifier& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cookie()) {
      set_cookie(from.cookie());
    }
    if (from.has_requestor_guid()) {
      set_requestor_guid(from.requestor_guid());
    }
    if (from.has_requestor_name()) {
      set_requestor_name(from.requestor_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestIdentifier::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestIdentifier::CopyFrom(const RequestIdentifier& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestIdentifier::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void RequestIdentifier::Swap(RequestIdentifier* other) {
  if (other != this) {
    std::swap(cookie_, other->cookie_);
    std::swap(requestor_guid_, other->requestor_guid_);
    std::swap(requestor_name_, other->requestor_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestIdentifier::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestIdentifier_descriptor_;
  metadata.reflection = RequestIdentifier_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PlayerCommandMsg_NewSongRequest::kSongNameFieldNumber;
const int PlayerCommandMsg_NewSongRequest::kPositionInMsFieldNumber;
#endif  // !_MSC_VER

PlayerCommandMsg_NewSongRequest::PlayerCommandMsg_NewSongRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerCommandMsg.NewSongRequest)
}

void PlayerCommandMsg_NewSongRequest::InitAsDefaultInstance() {
}

PlayerCommandMsg_NewSongRequest::PlayerCommandMsg_NewSongRequest(const PlayerCommandMsg_NewSongRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PlayerCommandMsg.NewSongRequest)
}

void PlayerCommandMsg_NewSongRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  song_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  position_in_ms_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayerCommandMsg_NewSongRequest::~PlayerCommandMsg_NewSongRequest() {
  // @@protoc_insertion_point(destructor:PlayerCommandMsg.NewSongRequest)
  SharedDtor();
}

void PlayerCommandMsg_NewSongRequest::SharedDtor() {
  if (song_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete song_name_;
  }
  if (this != default_instance_) {
  }
}

void PlayerCommandMsg_NewSongRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCommandMsg_NewSongRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerCommandMsg_NewSongRequest_descriptor_;
}

const PlayerCommandMsg_NewSongRequest& PlayerCommandMsg_NewSongRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_player_5fcommand_2eproto();
  return *default_instance_;
}

PlayerCommandMsg_NewSongRequest* PlayerCommandMsg_NewSongRequest::default_instance_ = NULL;

PlayerCommandMsg_NewSongRequest* PlayerCommandMsg_NewSongRequest::New() const {
  return new PlayerCommandMsg_NewSongRequest;
}

void PlayerCommandMsg_NewSongRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_song_name()) {
      if (song_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        song_name_->clear();
      }
    }
    position_in_ms_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PlayerCommandMsg_NewSongRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerCommandMsg.NewSongRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string song_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_song_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->song_name().data(), this->song_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "song_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_position_in_ms;
        break;
      }

      // optional uint32 position_in_ms = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_position_in_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &position_in_ms_)));
          set_has_position_in_ms();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerCommandMsg.NewSongRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerCommandMsg.NewSongRequest)
  return false;
#undef DO_
}

void PlayerCommandMsg_NewSongRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerCommandMsg.NewSongRequest)
  // required string song_name = 1;
  if (has_song_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->song_name().data(), this->song_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "song_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->song_name(), output);
  }

  // optional uint32 position_in_ms = 2 [default = 0];
  if (has_position_in_ms()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->position_in_ms(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerCommandMsg.NewSongRequest)
}

::google::protobuf::uint8* PlayerCommandMsg_NewSongRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerCommandMsg.NewSongRequest)
  // required string song_name = 1;
  if (has_song_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->song_name().data(), this->song_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "song_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->song_name(), target);
  }

  // optional uint32 position_in_ms = 2 [default = 0];
  if (has_position_in_ms()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->position_in_ms(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerCommandMsg.NewSongRequest)
  return target;
}

int PlayerCommandMsg_NewSongRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string song_name = 1;
    if (has_song_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->song_name());
    }

    // optional uint32 position_in_ms = 2 [default = 0];
    if (has_position_in_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->position_in_ms());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCommandMsg_NewSongRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PlayerCommandMsg_NewSongRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PlayerCommandMsg_NewSongRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PlayerCommandMsg_NewSongRequest::MergeFrom(const PlayerCommandMsg_NewSongRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_song_name()) {
      set_song_name(from.song_name());
    }
    if (from.has_position_in_ms()) {
      set_position_in_ms(from.position_in_ms());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PlayerCommandMsg_NewSongRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCommandMsg_NewSongRequest::CopyFrom(const PlayerCommandMsg_NewSongRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCommandMsg_NewSongRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PlayerCommandMsg_NewSongRequest::Swap(PlayerCommandMsg_NewSongRequest* other) {
  if (other != this) {
    std::swap(song_name_, other->song_name_);
    std::swap(position_in_ms_, other->position_in_ms_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PlayerCommandMsg_NewSongRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerCommandMsg_NewSongRequest_descriptor_;
  metadata.reflection = PlayerCommandMsg_NewSongRequest_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int PlayerCommandMsg::kReqIdentifierFieldNumber;
const int PlayerCommandMsg::kStopPlayFieldNumber;
const int PlayerCommandMsg::kNewSongRequestFieldNumber;
#endif  // !_MSC_VER

PlayerCommandMsg::PlayerCommandMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerCommandMsg)
}

void PlayerCommandMsg::InitAsDefaultInstance() {
  req_identifier_ = const_cast< ::RequestIdentifier*>(&::RequestIdentifier::default_instance());
  new_song_request_ = const_cast< ::PlayerCommandMsg_NewSongRequest*>(&::PlayerCommandMsg_NewSongRequest::default_instance());
}

PlayerCommandMsg::PlayerCommandMsg(const PlayerCommandMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PlayerCommandMsg)
}

void PlayerCommandMsg::SharedCtor() {
  _cached_size_ = 0;
  req_identifier_ = NULL;
  stop_play_ = false;
  new_song_request_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayerCommandMsg::~PlayerCommandMsg() {
  // @@protoc_insertion_point(destructor:PlayerCommandMsg)
  SharedDtor();
}

void PlayerCommandMsg::SharedDtor() {
  if (this != default_instance_) {
    delete req_identifier_;
    delete new_song_request_;
  }
}

void PlayerCommandMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCommandMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerCommandMsg_descriptor_;
}

const PlayerCommandMsg& PlayerCommandMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_player_5fcommand_2eproto();
  return *default_instance_;
}

PlayerCommandMsg* PlayerCommandMsg::default_instance_ = NULL;

PlayerCommandMsg* PlayerCommandMsg::New() const {
  return new PlayerCommandMsg;
}

void PlayerCommandMsg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_req_identifier()) {
      if (req_identifier_ != NULL) req_identifier_->::RequestIdentifier::Clear();
    }
    stop_play_ = false;
    if (has_new_song_request()) {
      if (new_song_request_ != NULL) new_song_request_->::PlayerCommandMsg_NewSongRequest::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PlayerCommandMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerCommandMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .RequestIdentifier req_identifier = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req_identifier()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stop_play;
        break;
      }

      // optional bool stop_play = 2;
      case 2: {
        if (tag == 16) {
         parse_stop_play:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stop_play_)));
          set_has_stop_play();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_new_song_request;
        break;
      }

      // optional .PlayerCommandMsg.NewSongRequest new_song_request = 3;
      case 3: {
        if (tag == 26) {
         parse_new_song_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_new_song_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerCommandMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerCommandMsg)
  return false;
#undef DO_
}

void PlayerCommandMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerCommandMsg)
  // required .RequestIdentifier req_identifier = 1;
  if (has_req_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->req_identifier(), output);
  }

  // optional bool stop_play = 2;
  if (has_stop_play()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->stop_play(), output);
  }

  // optional .PlayerCommandMsg.NewSongRequest new_song_request = 3;
  if (has_new_song_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->new_song_request(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerCommandMsg)
}

::google::protobuf::uint8* PlayerCommandMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerCommandMsg)
  // required .RequestIdentifier req_identifier = 1;
  if (has_req_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->req_identifier(), target);
  }

  // optional bool stop_play = 2;
  if (has_stop_play()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->stop_play(), target);
  }

  // optional .PlayerCommandMsg.NewSongRequest new_song_request = 3;
  if (has_new_song_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->new_song_request(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerCommandMsg)
  return target;
}

int PlayerCommandMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .RequestIdentifier req_identifier = 1;
    if (has_req_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->req_identifier());
    }

    // optional bool stop_play = 2;
    if (has_stop_play()) {
      total_size += 1 + 1;
    }

    // optional .PlayerCommandMsg.NewSongRequest new_song_request = 3;
    if (has_new_song_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->new_song_request());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCommandMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PlayerCommandMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PlayerCommandMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PlayerCommandMsg::MergeFrom(const PlayerCommandMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_req_identifier()) {
      mutable_req_identifier()->::RequestIdentifier::MergeFrom(from.req_identifier());
    }
    if (from.has_stop_play()) {
      set_stop_play(from.stop_play());
    }
    if (from.has_new_song_request()) {
      mutable_new_song_request()->::PlayerCommandMsg_NewSongRequest::MergeFrom(from.new_song_request());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PlayerCommandMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCommandMsg::CopyFrom(const PlayerCommandMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCommandMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_req_identifier()) {
    if (!this->req_identifier().IsInitialized()) return false;
  }
  if (has_new_song_request()) {
    if (!this->new_song_request().IsInitialized()) return false;
  }
  return true;
}

void PlayerCommandMsg::Swap(PlayerCommandMsg* other) {
  if (other != this) {
    std::swap(req_identifier_, other->req_identifier_);
    std::swap(stop_play_, other->stop_play_);
    std::swap(new_song_request_, other->new_song_request_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PlayerCommandMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerCommandMsg_descriptor_;
  metadata.reflection = PlayerCommandMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PlayerCommandReplyMsg::kReqIdentifierFieldNumber;
const int PlayerCommandReplyMsg::kReqStatusFieldNumber;
const int PlayerCommandReplyMsg::kReqStatusDescFieldNumber;
#endif  // !_MSC_VER

PlayerCommandReplyMsg::PlayerCommandReplyMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerCommandReplyMsg)
}

void PlayerCommandReplyMsg::InitAsDefaultInstance() {
  req_identifier_ = const_cast< ::RequestIdentifier*>(&::RequestIdentifier::default_instance());
}

PlayerCommandReplyMsg::PlayerCommandReplyMsg(const PlayerCommandReplyMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PlayerCommandReplyMsg)
}

void PlayerCommandReplyMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  req_identifier_ = NULL;
  req_status_ = false;
  req_status_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlayerCommandReplyMsg::~PlayerCommandReplyMsg() {
  // @@protoc_insertion_point(destructor:PlayerCommandReplyMsg)
  SharedDtor();
}

void PlayerCommandReplyMsg::SharedDtor() {
  if (req_status_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete req_status_desc_;
  }
  if (this != default_instance_) {
    delete req_identifier_;
  }
}

void PlayerCommandReplyMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCommandReplyMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerCommandReplyMsg_descriptor_;
}

const PlayerCommandReplyMsg& PlayerCommandReplyMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_player_5fcommand_2eproto();
  return *default_instance_;
}

PlayerCommandReplyMsg* PlayerCommandReplyMsg::default_instance_ = NULL;

PlayerCommandReplyMsg* PlayerCommandReplyMsg::New() const {
  return new PlayerCommandReplyMsg;
}

void PlayerCommandReplyMsg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_req_identifier()) {
      if (req_identifier_ != NULL) req_identifier_->::RequestIdentifier::Clear();
    }
    req_status_ = false;
    if (has_req_status_desc()) {
      if (req_status_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        req_status_desc_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PlayerCommandReplyMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerCommandReplyMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .RequestIdentifier req_identifier = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req_identifier()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_req_status;
        break;
      }

      // required bool req_status = 2;
      case 2: {
        if (tag == 16) {
         parse_req_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &req_status_)));
          set_has_req_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_req_status_desc;
        break;
      }

      // required string req_status_desc = 3;
      case 3: {
        if (tag == 26) {
         parse_req_status_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_req_status_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->req_status_desc().data(), this->req_status_desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "req_status_desc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerCommandReplyMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerCommandReplyMsg)
  return false;
#undef DO_
}

void PlayerCommandReplyMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerCommandReplyMsg)
  // required .RequestIdentifier req_identifier = 1;
  if (has_req_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->req_identifier(), output);
  }

  // required bool req_status = 2;
  if (has_req_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->req_status(), output);
  }

  // required string req_status_desc = 3;
  if (has_req_status_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->req_status_desc().data(), this->req_status_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "req_status_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->req_status_desc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerCommandReplyMsg)
}

::google::protobuf::uint8* PlayerCommandReplyMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlayerCommandReplyMsg)
  // required .RequestIdentifier req_identifier = 1;
  if (has_req_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->req_identifier(), target);
  }

  // required bool req_status = 2;
  if (has_req_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->req_status(), target);
  }

  // required string req_status_desc = 3;
  if (has_req_status_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->req_status_desc().data(), this->req_status_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "req_status_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->req_status_desc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerCommandReplyMsg)
  return target;
}

int PlayerCommandReplyMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .RequestIdentifier req_identifier = 1;
    if (has_req_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->req_identifier());
    }

    // required bool req_status = 2;
    if (has_req_status()) {
      total_size += 1 + 1;
    }

    // required string req_status_desc = 3;
    if (has_req_status_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->req_status_desc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCommandReplyMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PlayerCommandReplyMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PlayerCommandReplyMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PlayerCommandReplyMsg::MergeFrom(const PlayerCommandReplyMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_req_identifier()) {
      mutable_req_identifier()->::RequestIdentifier::MergeFrom(from.req_identifier());
    }
    if (from.has_req_status()) {
      set_req_status(from.req_status());
    }
    if (from.has_req_status_desc()) {
      set_req_status_desc(from.req_status_desc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PlayerCommandReplyMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCommandReplyMsg::CopyFrom(const PlayerCommandReplyMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCommandReplyMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_req_identifier()) {
    if (!this->req_identifier().IsInitialized()) return false;
  }
  return true;
}

void PlayerCommandReplyMsg::Swap(PlayerCommandReplyMsg* other) {
  if (other != this) {
    std::swap(req_identifier_, other->req_identifier_);
    std::swap(req_status_, other->req_status_);
    std::swap(req_status_desc_, other->req_status_desc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PlayerCommandReplyMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerCommandReplyMsg_descriptor_;
  metadata.reflection = PlayerCommandReplyMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
